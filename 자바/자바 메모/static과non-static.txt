<static 멤버>
선언 방법 -> 멤버 선언시 앞에 static 붙이기
ex) static int m; //static필드
     static void f(){} //static메소드

non-static 멤버 vs static 멤버
non-static :
공간적 : 멤버가 객체마다 별도로 존재
시간적 : 객체 생성 시 멤버 생성(객체생성때 같이 생성, 객체 삭제때 같이 삭제)
공유 : 공유x, 멤버는 객체 내에 각각의 공간을 유지함

static :
공간적 : 멤버는 클래스당 하나가 생성됨
시간적 : 클래스 로딩 시, 멤버 생성됨(객체 생기기전에 만들어지는 거임, 고로 객체 생기기 전에 사용 가능/객체생성x하고 가능, 사라지는 순간은 프로그램 종료될때)
공유 : 동일한 클래스의 모든 객체에서 공유가능

클래스 멤버에 접근하는 방법 2가지
1. 객체.static멤버
	(객체.static 멤버 / 객체.static 메소드)
2. 클래스명.static멤버

<static 메소드>
제약조건 :
static 메소드, static은 기본적으로 객체가 생성되기 전에 만들어짐.
static 메소드도 똑같음.
그런고로 객체랑 같이 만들어지는 non-static멤버를 사용할 수 없음.
오직 static 멤버만 써야함.

이거랑 똑같이 this도 사용할 수 없음.(객체 만들어지기 전에 만들어져서)